<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on Hello World</title><link>https://deadlysyn.com/blog/tags/devops/</link><description>Recent content in devops on Hello World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 10 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://deadlysyn.com/blog/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Safely Expose Credentials</title><link>https://deadlysyn.com/blog/posts/safely-expose-credentials/</link><pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate><guid>https://deadlysyn.com/blog/posts/safely-expose-credentials/</guid><description>If you&amp;rsquo;re juggling STS credentials while wrangling more AWS accounts than you can count, you&amp;rsquo;ve likely heard of aws-vault. Aside from the convenience factor, it&amp;rsquo;s also good for security (keep plain-text credentials off disk).
Similarly, it&amp;rsquo;s obvious you don&amp;rsquo;t want to commit credentials. Depending how far you take that, even committing encrypted credentials (or storing them anywhere not intended for managing secrets) should be discouraged.
One reason is building up muscle memory and inviting accidental commits of unencrypted secrets (use something like gitleaks to prevent that).</description></item><item><title>Lean IAM Management</title><link>https://deadlysyn.com/blog/posts/lean-aws-iam/</link><pubDate>Sun, 16 Jan 2022 00:00:00 +0000</pubDate><guid>https://deadlysyn.com/blog/posts/lean-aws-iam/</guid><description>Part of DevOps culture is avoiding tickets when automation can provide lower-friction alternatives. Similarly, the SRE mindset seeks to eliminate toil. We also know from experience that the most effective Agile teams are granted a high level of autonomy.
IAM is a routine stumbling block to autonomy. Teams need an &amp;ldquo;appropriate&amp;rdquo; level of access to do their job. That often turns into waiting on tickets, with another team twiddling bits to unblock development.</description></item><item><title>Go Datadog CLI</title><link>https://deadlysyn.com/blog/posts/go-datadog-cli/</link><pubDate>Mon, 29 Nov 2021 00:00:00 +0000</pubDate><guid>https://deadlysyn.com/blog/posts/go-datadog-cli/</guid><description>I found myself wrapping ChatOps around a CI/CD pipeline to manage scheduled downtime in DataDog (avoiding SLO impact for planned work). For astute readers wondering why this wasn&amp;rsquo;t a direct API call; I tend to (ab)use CI as a generic task runner (has an API, secret store, etc).
I wanted to identify resources using labels (team:foo, service:bar). While this is a common use case and things have hopefully improved, CLIs available at the time provided numerous ways to manage downtime but lacked tag support.</description></item></channel></rss>