<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>o11y on Hello World</title><link>https://deadlysyn.com/blog/tags/o11y/</link><description>Recent content in o11y on Hello World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 29 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://deadlysyn.com/blog/tags/o11y/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Datadog CLI</title><link>https://deadlysyn.com/blog/posts/go-datadog-cli/</link><pubDate>Mon, 29 Nov 2021 00:00:00 +0000</pubDate><guid>https://deadlysyn.com/blog/posts/go-datadog-cli/</guid><description>I found myself wrapping ChatOps around a CI/CD pipeline to manage scheduled downtime in DataDog (avoiding SLO impact for planned work). For astute readers wondering why this wasn&amp;rsquo;t a direct API call; I tend to (ab)use CI as a generic task runner (has an API, secret store, etc).
I wanted to identify resources using labels (team:foo, service:bar). While this is a common use case and things have hopefully improved, CLIs available at the time provided numerous ways to manage downtime but lacked tag support.</description></item><item><title>Observability in Node.js</title><link>https://deadlysyn.com/blog/posts/observability-in-node-js/</link><pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate><guid>https://deadlysyn.com/blog/posts/observability-in-node-js/</guid><description>Observability has always been directly linked to reliability in distributed systems. After all, it&amp;rsquo;s hard to reason about things you can not see. Thanks in part to Google&amp;rsquo;s espousal of Site Reliability Engineering principles (the SRE Bible has been a free read on-line for awhile now, so go check that out if you haven&amp;rsquo;t yet!), the continuous evolution of our craft, and an abundance of cloud native tooling&amp;hellip; observing value-producing things is easier than ever.</description></item></channel></rss>