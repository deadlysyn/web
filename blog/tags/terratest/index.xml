<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>terratest on Hello World</title><link>https://deadlysyn.com/blog/tags/terratest/</link><description>Recent content in terratest on Hello World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 04 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://deadlysyn.com/blog/tags/terratest/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing Infrastructure Code</title><link>https://deadlysyn.com/blog/posts/testing-infrastructure-automation/</link><pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate><guid>https://deadlysyn.com/blog/posts/testing-infrastructure-automation/</guid><description>Clone and follow along in the project repository&amp;hellip;
If you&amp;rsquo;re among the increasing majority who are using Terraform in some fashion, you have probably heard of Terratest. In the project&amp;rsquo;s own words, Terratest is a Go library that provides patterns and helper functions for testing infrastructure. While useful, Terratest may seem daunting since it requires writing Go. If you&amp;rsquo;ve wanted to get started with Terratest but haven&amp;rsquo;t had time to dig in, read on for a quick and painless intro!</description></item></channel></rss>